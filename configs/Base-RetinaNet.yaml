MODEL:
  MASK_ON: False
  META_ARCHITECTURE: "SingleStageDetector"
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  NECK:
    NAME: "FPN"
    IN_FEATURES: ["res3", "res4", "res5"]
    TOP_BLOCK_TYPE: "P6P7"
  SINGLE_STAGE_HEAD:
    NAME: "RetinaNetHead"
    IN_FEATURES: ["p3", "p4", "p5", "p6", "p7"]
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 90000
TRANSFORM:
  RESIZE:
    MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
